# ======================================
# Begin environment variable definitions
#

# Set neovim as editor
export EDITOR=nvim

# GPG commit signing fix
export GPG_TTY=$(tty)

# Include dotfile bin folder in path
export PATH="$PATH:$(chezmoi source-path)/bin"

export COMPLETION_WAITING_DOTS="true"

ZSH=$HOME/.oh-my-zsh
ZSH_CUSTOM=$HOME/.oh-my-zsh/custom

# Load environment variables from dotfiles which uses 1password
source ~/.env

#
# End environment variable definitions
# ====================================

# Starship prompt
eval "$(starship init zsh)"

# Zoxide cd helper
eval "$(zoxide init zsh)"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
if [[ "$(uname)" == "Darwin" ]]; then
  plugins=(
    asdf                    # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf
    bundler                 # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/bundler
    colored-man-pages       # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/colored-man-pages
    docker                  # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/docker
    docker-compose          # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/docker-compose
    encode64                # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/encode64
    extract                 # Defines a function called extract that extracts the archive file you pass it. (https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/extract)
    git                     # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git
    jump
    mosh                    # SSH tab completion for hostnames (https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/mosh)
    macos                   # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/macos
    urltools                # Provides two aliases to URL-encode and URL-decode strings. (https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/urltools)
    yarn                    # Aliases for yarn. (https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/yarn)
    zsh-autosuggestions
    zsh-syntax-highlighting
  )
else
  plugins=(
    colored-man-pages
    docker
    docker-compose
    encode64
    extract                 # Defines a function called extract that extracts the archive file you pass it. (https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/extract)
    git
    jump
    npm
    urltools                # Provides two aliases to URL-encode and URL-decode strings. (https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/urltools)
    yarn
    zsh-autosuggestions
    zsh-syntax-highlighting
  )
fi

#
# Import oh-my-zsh
#
source $ZSH/oh-my-zsh.sh
ZSH_HIGHLIGHT_STYLES[alias]='fg=077'
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]='fg=122'
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]='fg=123'
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)
ZSH_HIGHLIGHT_PATTERNS+=('rm -rf *' 'bold,bg=red')


unsetopt correct_all
setopt inc_append_history
unsetopt share_history

__git_files () {
  _wanted files expl 'local files' _files
}

zstyle ':completion:*:git-checkout:*' tag-order - '! commit-tags'

ulimit -S -n 2048

# =============
# Begin imports 
#

# Load XDG configuration to force a bunch of apps to use 
# UNIX standard ~/.config, ~/.local, etc.
# Automatically import *.zsh or *.sh
configFileLocations=(
    "{{ .xdgConfigDir }}/zshell_components"
)

for configFileLocation in "${configFileLocations[@]}"; do
    if [ -d "${configFileLocation}" ]; then
        while read -r configFile; do
            source "${configFile}"
        done < <(find "${configFileLocation}" \
            -maxdepth 2 \
            -type f \
            -name '*.zsh' \
            -o -name '*.sh' | sort)
    fi
done

unset configFileLocations configFileLocation


{{ if .dev_computer }}
# Active mise version manager on development machines
eval "$(mise activate zsh)"
{{ end }}

# fzf: fuzzy finder install
# https://github.com/junegunn/fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Import aliases
[ -f ~/.aliases ] && source ~/.aliases

# Include local zsh file
[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local

#
# End imports 
# ===========

alias reload="source ${HOME}/.zshrc" # Allow reloading state by loading into current shell
